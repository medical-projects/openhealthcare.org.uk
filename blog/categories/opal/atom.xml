<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Opal | Open Health Care UK - Blog]]></title>
  <link href="http://openhealthcare.org.uk/blog/categories/opal/atom.xml" rel="self"/>
  <link href="http://openhealthcare.org.uk/"/>
  <updated>2017-03-08T15:37:11+00:00</updated>
  <id>http://openhealthcare.org.uk/</id>
  <author>
    <name><![CDATA[Open Health Care UK]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Opal 0.8 Released]]></title>
    <link href="http://openhealthcare.org.uk/blog/2017/03/08/opal-08-released/"/>
    <updated>2017-03-08T14:00:29+00:00</updated>
    <id>http://openhealthcare.org.uk/blog/2017/03/08/opal-08-released</id>
    <content type="html"><![CDATA[A few weeks ago now we released [Opal](http://opal.openhealthcare.org.uk) 0.8. It’s quite a large release, so we thought we’d
walk you through some of the highlights.

### Forms - now with added sugar

We’ve been spending lots of time working to make forms easier to work with. Sometimes it seems that 95% of designing services is making
forms that aren't frustrating and difficult to use
- and having good tools to quickly build and iterate the forms you’re working with can make that process much easier.

We made sure that some of the features from Django models, like choices and defaults now flow through seamlessly by default to our form
widgets, and that the client side Angular code will use these by default without you having to do anything. This was all possible before,
but required more typing. Nobody likes extra typing.

For instance, if we had the following model:

<div class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">class</span> <span class="nc">TableClothPreference</span><span class="p">(</span><span class="n">EpisodeSubrecord</span><span class="p">):</span>
        <span class="n">COLOUR_CHOICES</span> <span class="o">=</span> <span class="p">(</span>
          <span class="p">(</span><span class="s">&#39;P&#39;</span><span class="p">,</span> <span class="s">&#39;Purple&#39;</span><span class="p">),</span>
          <span class="p">(</span><span class="s">&#39;R&#39;</span><span class="p">,</span> <span class="s">&#39;Red&#39;</span><span class="p">),</span>
        <span class="p">)</span>
        <span class="n">favourite_colour</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span>
                                            <span class="n">default</span><span class="o">=</span><span class="s">&#39;Purple&#39;</span><span class="p">,</span>
                                            <span class="n">choices</span><span class="o">=</span><span class="n">COLOUR_CHOICES</span><span class="p">)</span></code></pre></div>

We would be able to render a dropdown widget for the field that used the default and restricted the choices by simply using the
following in our code:

<div class="highlight"><pre><code class="language-jinja" data-lang="jinja"><span class="x">{ % select field=&quot;TableClothPreference.favourite_colour&quot; % }</span></code></pre></div>

We’ve also spent time making sure that form validation is much easier to work with. By default we
now validate forms on submission - making sure that we respect max length of form fields for instance.

As well as the improvements to forms in Opal itself, we’ve also been working hard on the Opal
[Pathway library](https://github.com/openhealthcare/opal-pathway). This library makes it significantly easier to work with
complex forms - particularly ones that need to save data to many different models. Although Pathway is still considered alpha software,
we fully anticipate that we’ll be incorporating it into Opal itself as the recommended way to build forms in Opal applications later this year.

### Python 3 support

Responding to an issue raised on the mailing list, we’ve refactored Opal to work on Python 3. Thanks to the hard work and excellent tooling in the
Python community this was a relatively painless task, but hopefully it puts us in a good position to move towards Python 3 deployments moving forwards.

### Common patterns for customising Patient Lists

We’ve made it much easier to implement some of the common patterns we see when working with patient lists, by explicitly adding APIs.

You can now [customise the ordering](http://opal.openhealthcare.org.uk/docs/v0.8.0/guides/list_views/#customising-sort-order-of-episodes)
of patients on a list-by-list basis using the comparator_service attribute of PatientList classes.
A comparator service is an Angular service that returns a list of comparator functions that are used in order to determine how
we should compare and sort two episodes - for instance:

<div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;opal.services&#39;</span><span class="p">)</span>
        <span class="p">.</span><span class="nx">factory</span><span class="p">(</span><span class="s1">&#39;MyComparatorService&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
            <span class="s2">&quot;use strict&quot;</span><span class="p">;</span>
            <span class="k">return</span> <span class="p">[</span>
                <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span> <span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">category_name</span> <span class="p">},</span>
                <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span> <span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">id</span> <span class="p">}</span>
            <span class="p">]</span>
        <span class="p">});</span></code></pre></div>

We also introduced an easy way for you to
[group lists into tabs](http://opal.openhealthcare.org.uk/docs/v0.8.0/guides/list_views/#grouping-related-patient-lists)
that display in the default template.

### Goodbye Angular-Strap

Until Opal 0.8 we had not one, but two UI libraries which wrapped Bootstrap components in Angular compatible code.
We’ve been uncomfortable about that for a while - it’s confusing to have to remember which widget comes from which
library! As of Opal 0.8 however we’ve picked a winner - [UI Bootstrap](http://angular-ui.github.io/bootstrap/versioned-docs/0.14.3/),
and we removed all references to Angular Strap completely, both in Opal and in all the applications and plugins we could find on
Github.

We&#8217;re planning to update the UI Bootstrap library to a more recent version in the next couple of releases, but the re-naming of
their modal component could potentially make this transition slightly tricky, so we&#8217;re waiting to make sure we can do so as
smoothly as possible.

### Finding out more

If you’d like to find out more about Opal, then you might like to try the
[documentation](http://opal.openhealthcare.org.uk/docs/) or the
[mailing list](https://groups.google.com/forum/?ohc-dev#!forum/ohc-opal).
There are more details about some of the other smaller features and bugfixes in 0.8 in the
[release notes](https://github.com/openhealthcare/opal/releases/tag/0.8.0),
and you
can also read about how to [upgrade from 0.7.x](http://opal.openhealthcare.org.uk/docs/v0.8.0/reference/upgrading/#071-080)
in the documentation.

If you have a project that you think might be suited to Opal, please do [get in touch](mailto:hello@openhealthcare.org.uk) - we’d love to hear from you.

<small>
Photo credits: [Jay Springett](https://www.flickr.com/photos/thejaymo/)
</small>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Happy Birthday to OPAL!]]></title>
    <link href="http://openhealthcare.org.uk/blog/2016/06/01/happy-birthday-to-opal/"/>
    <updated>2016-06-01T17:00:55+01:00</updated>
    <id>http://openhealthcare.org.uk/blog/2016/06/01/happy-birthday-to-opal</id>
    <content type="html"><![CDATA[Last Saturday 28th May 2016 marked the third birthday of OPAL - the
[Open Source framework](https://github.com/openhealthcare/opal) we created to help developers
create high quality clinical applications. We’ve come a long way since the
[very first commit back in 2013](https://github.com/openhealthcare/opal/commit/63917d2d288faca6201c65d0de6893a59577b75d)
so to celebrate we thought now would be a great time to take a look back over everything we’ve achieved.

## Early days

For the [first few months](https://github.com/openhealthcare/opal/graphs/contributors?from=2013-05-26&to=2013-07-02&type=c)
the lead developer on OPAL was the awesome
[Peter Inglesby](https://twitter.com/inglesp), who made that very first commit, and
worked with Drs
[Pollara](https://twitter.com/gpollara),
[Marks](https://github.com/michaeledwardmarks/) and
[Noursadeghi](https://twitter.com/mnoursad) to craft a Patient List system for infection patients at UCH. We met each
week in the old Library room at [HTD](http://www.thehtd.org/) for a show and tell and figured out what the next sprint would look like.

The interface changed almost weekly back then as we tried to figure out how best to replace the menagerie of Word
documents, T-Cards, Access databases and Excel spreadsheets that the teams were currently using as patient lists.
As you can see below, even three years on, the Patient List components of OPAL are still recognisable from those first few months!

<div class="post-thumb">
<center>
  <img class="img-responsive" src="http://openhealthcare.org.uk/assets/images/posts/elcidopal.gif" />
</center>
</div>

## Making OPAL a Framework not an Application

Even at the beginning we knew that we wanted OPAL to be more of a framework than an application. By
[October 2013](https://github.com/openhealthcare/elcid/commit/b695828681b27e4b7932dd8eb0c70f5f9c55a8f1) we
started moving the UCH specific elements out of OPAL, refactoring it for reuse. We set about moving application specific
business logic into
[elCID](http://elcid.openhealthcare.org.uk) (the first OPAL application),
allowing OPAL to be the generic platform for the services we build.

OPAL would provide a sensible robust default configuration along with a
[core data model](http://opal.openhealthcare.org.uk/docs/v0.6.0/guides/datamodel/),
[reusable common components](http://opal.openhealthcare.org.uk/docs/v0.6.0/guides/components_overview/), UI
components, and a clear path for integration with other systems and standards. Meanwhile individual applications built with
OPAL would provide specialised domain logic for particular tasks, clinical specialties, or customisation for individual
installations.

## Deployment to an actual NHS Hospital

In January 2014 we were ready to deploy
[elCID](https://github.com/openhealthcare/elcid) to a real NHS hospital - just eight months after
starting the project. Since then it has been used to manage inpatients and outpatients for HTD and the Infection and
Microbiology teams at UCLH.

Digital services are never finished though - and we’ve
[iterated](http://openhealthcare.org.uk/blog/2016/02/16/how-were-helping-respond-to-the-zika-outbreak/) and
[improved](http://openhealthcare.org.uk/blog/2015/10/21/launching-a-new-walk-in-service/) both elCID and OPAL frequently. OPAL alone
has racked up 19 releases and almost 2,500 commits since we began. During that time we’ve worked to turn our vision for a
robust Open Source framework for building clinical web applications into a reality.

## Taking OPAL to NHS Hack Days

One of the big tests for how far along that path we are is how OPAL has performed as a tool for building projects at
[NHS Hack Days](http://nhshackday.com/). Hack days are a great way to stress test developer tools. They reward well-thought-out
APIs and good documentation,
giving you a great insight into how much they help or hinder developers.

The first OPAL project at a NHS Hack Day was back in
[May 2014](http://nhshackday.com/previous/events/2014/05/london/) when
[Dr Gabriele Pollara](https://twitter.com/gpollara) brought a team together to try and
add some extra features to OPAL and elCID. Even though the changes from
[their fork of OPAL](https://github.com/mastersplinter/opal) were never merged back into the
main codebase, it gave us plenty of insight into where we had the coupling wrong between framework and application, and
places where could improve the APIs or make the documentation clearer.

Four months later when the 8th NHS Hack day rolled around in
[Leeds](http://nhshackday.com/previous/events/2014/09/leeds/) the codebase had improved significantly - with a project
to design a
[handover tool for Renal teams](https://github.com/openhealthcare/opal-renal) coming joint first:

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Renal project team collect T shirts for coming joint first at <a href="https://twitter.com/hashtag/nhshd?src=hash">#nhshd</a> <a href="http://t.co/D6EUkAUDdg">pic.twitter.com/D6EUkAUDdg</a></p>&mdash; Alison Cameron (@allyc375) <a href="https://twitter.com/allyc375/status/516225627423518720">September 28, 2014</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

This was the first time we had built a brand new application from scratch using OPAL, and it gave us a clear head
start over hackday projects that had had to start from nothing.

Over the next year, projects like
[eCDR](https://github.com/TeamBigPharma/bigpharma) and
[travelalerts](https://github.com/nhshackday/opal-travelalerts) were a great benchmark of how OPAL was progressing. New developers
were able to get to grips with it and start building on top of it over the course of just a weekend. The framework was
obviously maturing.

In the most recent London NHS Hack Day we saw two projects building on top of OPAL - A
[digital anaesthetic chart](https://github.com/anaesthetic-health-chart) that pulls
and displays observation data from a anaesthetic monitors, and the eventual winner - a
[Raspberry Pi based EPR in a box](http://github.com/nhshackday/outbreak).

<center>
<div class="post-thumb">
<img class="img-responsive" src="http://openhealthcare.org.uk/assets/images/posts/dacer.png" />
</div>

<iframe width="560" height="315" src="https://www.youtube.com/embed/hJWTpSH8Bxc?rel=0&amp;showinfo=0" frameborder="0" allowfullscreen></iframe>
</center>

It was particularly exciting to see two brand new - and completely re-skinned OPAL projects built over one weekend and to
get lots of feedback from all of our friends in the NHS Hack Day community.

## The last few months

The [last few months](https://github.com/openhealthcare/opal/graphs/contributors?from=2015-07-22&to=2016-05-28&type=c)
have seen OPAL leap forward in terms of
[code quality](https://coveralls.io/github/openhealthcare/opal) and depth of features. In large part this is thanks to the hard work of
[Fred Kingham](https://twitter.com/fredkingham) - who has taken over as lead developer for the project. The upcoming
[0.6 release](http://opal.openhealthcare.org.uk/docs/v0.6.0/) will see many improvements. We’ve refactored form helpers to make it easy to embed forms. Added new Patient detail views and a new Patient List module to make OPAL even more customisable. We’ve also added in an integration layer for connecting to other hospital systems. All this coupled with even greater performance.

We’re not done yet though! We’re looking forward to improving the
[documentation](http://opal.openhealthcare.org.uk/docs/v0.6.0/) to make it easier for new developers, we’re updating our core clinical models, improving the way in which we guide users through complex clinical pathways, adding further UI improvements for mobile devices along with much more as we move towards a 1.0 release.

If you want to know more about OPAL, or about the work that we do at Open Health Care building digital tools for clinicians,
[drop us a line](mailto:hello@openhealthcare.org.uk) - we’d love to hear from you.

<small>
Photo credits: [Will Clayton](https://www.flickr.com/photos/spool32/)
</small>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How We're Helping Respond to the Zika Outbreak]]></title>
    <link href="http://openhealthcare.org.uk/blog/2016/02/16/how-were-helping-respond-to-the-zika-outbreak/"/>
    <updated>2016-02-16T15:00:29+00:00</updated>
    <id>http://openhealthcare.org.uk/blog/2016/02/16/how-were-helping-respond-to-the-zika-outbreak</id>
    <content type="html"><![CDATA[The last few months have seen an explosive spread of the
[Zika virus](http://www.theguardian.com/world/2016/jan/28/zika-virus-spreading-explosively-says-world-health-organisation),
which has been potentially linked to thousands of birth defects in Latin America. The Zika virus is a
[mosquito-transmitted infection](http://www.nytimes.com/interactive/2016/health/what-is-zika-virus.html)
that was previously sporadically reported in Africa and the Pacific, but has recently started spreading rapidly
in South America. Patients usually have a mild flu-like illness consisting of a low fever, headache, muscle and joint pain,
red eyes and rash.

In the UK, many patients who exhibit symptoms related to Zika and have recently travelled are referred to the specialist
[Hospital for Tropical Diseases](http://www.thehtd.org/) in London, which has resulted in a large increase in their
workload.

The Hospital for Tropical Diseases uses our [elCID](http://elcid.openhealthcare.org.uk/) software to manage their clinical
workflow, so as soon as we heard this,
we tried to understand what we could do to help. At Open Health Care we believe the digital tools clinicians use to do their
jobs need to be iterated and improved on a frequent basis. That means we deliver services that are flexible enough to adapt
to changing clinical needs, and we’re on hand to help make those improvements.

<div class="post-thumb">
  <img class="img-responsive" src="http://openhealthcare.org.uk/assets/images/posts/zika.top.png" alt="" style="border: 1px solid black;"/>
</div><!--//post-thumb-->

Working closely with clinicians from HTD, we quickly developed a prototype Zika “pathway”. This enables users to record extra
information of particular importance to patients they were treating for Zika, as well as extra quick ways to enter the very
specific set of tests that are most relevant to such patients.

Because we have an electronic clinical pathway specific to the particular condition being treated, we were able to provide
lots of contextually relevant information and notes for its treatment. This guidance was written by the local consultants,
and helps to make sure that every patient is given the very best care possible.

<div class="post-thumb">
  <img class="img-responsive" src="http://openhealthcare.org.uk/assets/images/posts/zika.bottom.png" alt="" style="border: 1px solid black;" />
</div><!--//post-thumb-->

All the information about patients that gets entered on [elCID](http://elcid.openhealthcare.org.uk/) is stored as high quality
structured data. That means that we
are also able to generate a summary of their interaction with the patient at the click of a button, complete with
symptoms, travel history, investigations and results, and the specific extra Zika information we are now recording.

Documenting clinical activity in this way - on digital tools that understand the clinical domain -  means that it is also
available subsequently for audit and analysis purposes. Extracting data on the management of Zika patients at the hospital
is now something that can be done in a few clicks, rather than requiring a laborious manual review of clinical documentation.

In many ways this is one of the real opportunities of the NHS’ move to paperless working - when you move to using tools that
allow you to analyse and learn from data generated by routine clinical work. We look forward to finding out what the team
learn about their response to the Zika outbreak.

Crucially, this new module involved just a couple of days prototyping, iterating and testing the new Zika pathway, before
deploying to the live system. Over the next few weeks we’ll be checking back regularly to gather feedback from the users
of the service so that we can be sure that we’re meeting their needs.

Updating the systems that underpin the delivery of care should be this simple all the time - they should be designed with
flexibility and iteration in mind, and be supported by teams who have the capability to iterate them responsively.

If you’d like to know more about how we could help you by delivering services like this, or more about the services we offer,
do get in touch with us at <a href="mailto:hello@openhealthcare.org.uk">hello@openhealthcare.org.uk</a>.

<small>
Photo credits: [John Tan](https://www.flickr.com/photos/31031835@N08/)
</small>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OPAL 0.5 Released]]></title>
    <link href="http://openhealthcare.org.uk/blog/2015/11/13/opal-05-released/"/>
    <updated>2015-11-13T16:00:55+00:00</updated>
    <id>http://openhealthcare.org.uk/blog/2015/11/13/opal-05-released</id>
    <content type="html"><![CDATA[We're happy to announce that we've just released a new version of [OPAL](http://opal.openhealthcare.org.uk/docs/) -
our framework for building clinical facing digital services.

So - what's new in this release?

## Search

We've completely re-designed our search pages to help clinicians find
the patients they're interested in more easily. We also default to
having a search box in the navigation of every page.

![](https://raw.githubusercontent.com/openhealthcare/openhealthcare.org.uk/master/source/assets/images/posts/search.results.png)

In addition, we've been working hard to make search backends pluggable,
so that in the future you'll be able to drop in alternative backends of
your choice as your application scales.

## Patient List view

We spent a lot of time over the past few months collating feedback from users and
doing research to understand how we could improve the core Patient List
views. As a response to that we've updated the list interface - making it clearer
which patient is currently active, and removing some of the features that weren't
actually helping our users to care for patients.

![](https://raw.githubusercontent.com/openhealthcare/openhealthcare.org.uk/master/source/assets/images/posts/list.view.png)

## Subrecord metadata

We added four new utility fields to
[Patient and Episode subrecords](http://opal.openhealthcare.org.uk/docs/guides/datamodel/)
 - created_by, updated_by, created, updated. This gives developers easier
programatic access to high level audit trail information, without having
to navigate the [low level Django Reversion
API](https://github.com/etianen/django-reversion/blob/master/docs/api.rst)
- which is still there for when you need more detailed audit trail
information.

## Select2 and List fields

This release introduces
[Select2](https://github.com/angular-ui/ui-select) to OPAL - which
provides us some nicer widgets - particularly for fields associated with
[lookuplists](http://opal.openhealthcare.org.uk/docs/guides/lookup_lists/),
and has also enabled the development of list types as
Subrecord fields. For example this means that your travel can be to a
list of countries when you take a backpacking trip through Southeast
Asia!

## What's Next?

Just because this release is out, we're not resting on our laurels - in
fact we're already gearing up for the next releases. We're planning to
look at the information architecture of Episode detail views, including
a new Notes view that's currently being tested by some users of the
[elCID](http://elcid.openhealthcare.org.uk) project.

We also plan to refactor some of the core data models back into OPAL to provide
them there by default rather than implemented over and over again in
individual applications.

As ever, because OPAL is an Open Governance [Open Source](http://github.com/openhealthcare/opal) project, you can
follow our progress over on
[our public Waffle board](https://waffle.io/openhealthcare/opal-ideas) where we'll be
organising our work.

## More about OPAL

If you want to find out more about OPAL or how Open Health Care can help
you to run high quality digital services for doctors in your institution
then do get in touch!
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Launching a New Clinical Digital Service for Returning Travellers]]></title>
    <link href="http://openhealthcare.org.uk/blog/2015/10/21/launching-a-new-walk-in-service/"/>
    <updated>2015-10-21T21:00:29+01:00</updated>
    <id>http://openhealthcare.org.uk/blog/2015/10/21/launching-a-new-walk-in-service</id>
    <content type="html"><![CDATA[Just a couple of weeks ago we launched a new service at the [Hospital for Tropical Diseases](http://www.thehtd.org/home.aspx)
in London to help the doctors and nurses who run their [Emergency Walk-In Clinic](http://www.thehtd.org/emergencies.aspx).
At the clinic,
travellers who have returned from the tropics and are acutely unwell turn up without requiring an appointment to get treated
by specialists in tropical diseases. The service tracks patients on their journey through the clinic, from initial triage to
following up on lab results that arrive after they've left.


<div class="post-thumb">
  <img class="img-responsive" src="http://openhealthcare.org.uk/assets/images/posts/walkin.referral.png" alt="" style="border: 2px solid black;" />
</div><!--//post-thumb-->

We worked closely with the staff who run the clinic, making sure that we met the different needs of different types of user
- in this case admin staff, the nursing staff, doctors, as well as the service managers who wanted data on what activity was
happening. Just like we do with all of our services, we brought them into our agile development process as we iteratively
developed the service based on research and their feedback.

Clinical digital services too often fail to take into account the experiences of the people on the ground who have to use
them in practice. At Open Health Care we don&#8217;t think that&#8217;s acceptable for something as important as delivering health care.

Because of that we will continue to regularly meet with users of the service to conduct usability testing and actively seek
feedback so that we can continuously improve the service. That feedback loop needs to be a part of the ongoing operation of
digital products and services in hospitals - not just something that happens as part of an initial design phase - and we&#8217;ve
seen before just how useful it can be as we&#8217;ve been able to respond to changing user needs and changes to the context and
processes that surround users experiences of our services.


<div class="post-thumb">
  <img class="img-responsive" src="http://openhealthcare.org.uk/assets/images/posts/walkin.nurseledcare.png" alt="" style="border: 2px solid black;" />
</div><!--//post-thumb-->

<h2>Use data to design services.<br>It makes things better</h2>

One of the key goals of the project was to allow the team at HTD to gather high quality data about the cohort of patients
that they treat. This data is hugely valuable, both academically for research purposes, and because it enables the team
to understand their workload.

When the tools that are used for routine day-to-day clinical care don&#8217;t collect usable data, the cost of analysing what you&#8217;ve
been doing become huge. With the new Walk-in service however, all of the information that the institution knows about a patient,
from demographics to observations, travel history to treatment, gets stored as high quality structured data.

That means that anyone can get an accurate answer to a question like &#8220;How many patients did we see with Dengue fever in the last
year&#8221; in seconds, rather than it taking hours or days of painstaking work reviewing case notes, or manually curating and maintaining
their own databases.

We&#8217;re excited about the possibilities for service redesign and research that this new capability has opened up for the team, and
we&#8217;ve already been brainstorming ideas - so watch this space!

## How it all came together

The service was built as a [plugin](https://github.com/openhealthcare/opal-walk-in) for [OPAL](http://opal.openhealthcare.org.uk) -
our open source framework for building high quality digital services in a clinical setting, and is deployed as part of
[elCID - an existing service that we run for UCLH](http://elcid.openhealthcare.org.uk) to manage patients with infection.

We love delivering high quality digital services for doctors.
If you&#8217;d like to explore how we might be able to help you out at your
institution, [get in touch](http://openhealthcare.org.uk/contact.html) - we&#8217;re always keen to meet people with interesting problems
to solve as we try and make sure that the digital services that clinical staff in the NHS use in their day jobs is as good as the
services they use in their personal lives.


<div class="post-thumb">
  <img class="img-responsive" src="http://openhealthcare.org.uk/assets/images/posts/walkin.advice.png" alt="" style="border: 2px solid black;" />
</div><!--//post-thumb-->
]]></content>
  </entry>
  
</feed>
